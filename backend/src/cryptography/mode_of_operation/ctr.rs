use crate::cryptography::aes::{aes_encrypt, AESKey};
use crate::cryptography::mode_of_operation::{BasicModeOfOperation, ModeOfOperation};

/// The `Counter` mode counts up from a one-time-use value called `nonce`.
/// Each newly generated number (by for example counting) is put into the encryption function
/// and then XORed with the plaintext to get ciphertext.
pub struct CTR {
    /// The nonce value is the start of the counter and mustn't repeat with the same key.
    /// It can be of any length (less than 16 bytes) and is appended with the Counter: `nonce || counter`.
    /// Hence, the len(nonce) + len(counter) must be equal to 128 bits. Neither nonce nor count
    /// are allowed to repeat, hence a sufficiently large number of both is required.
    /// Recommended is either 64-bits (=8 bytes) for both nonce and counter or 96-bits (=12 bytes)
    /// for nonce and 32-bits (=4 bytes) for the counter. The amount of bytes for the counter
    /// is calculated based on the size of nonce.
    pub nonce: Vec<u8>,
}

fn num_fits_in_n_bytes(value: usize, n: usize) -> bool {
    let usize_bytes = size_of::<usize>();
    n >= usize_bytes || 1usize << (8 * n) - 1 >= value
}

impl CTR {
    /// Encrypts the plaintext. The counter is `initial` for the first block and is then increment
    /// by 1 for each of the next blocks. Also assumes that the counter does not overflow.
    pub fn encrypt_with_initial<K: AESKey>(
        key: &K,
        plaintext: &[u128],
        initial: u128,
    ) -> Vec<u128> {
        plaintext
            .iter()
            .enumerate()
            .map(|(i, plain_block)| {
                let cipher_input = initial + (i as u128);
                let cipher_output = aes_encrypt(cipher_input, key);
                plain_block ^ cipher_output
            })
            .collect()
    }
}

impl ModeOfOperation for CTR {}

impl BasicModeOfOperation for CTR {
    fn encrypt<K: AESKey>(&self, key: &K, plaintext: &[u128]) -> Vec<u128> {
        assert!(self.nonce.len() <= 16, "Nonce can only be 16 bytes long.");
        
        let bytes_for_nonce = self.nonce.len();
        let bytes_for_counter = 16 - bytes_for_nonce;

        assert!(
            num_fits_in_n_bytes(plaintext.len(), bytes_for_counter),
            "The counter overflowed"
        );

        let mut buffer = [0u8; 16];
        buffer[..bytes_for_nonce].copy_from_slice(self.nonce.as_slice());

        let nonce = u128::from_be_bytes(buffer);

        Self::encrypt_with_initial(key, plaintext, nonce)
    }

    fn decrypt<K: AESKey>(&self, key: &K, ciphertext: &[u128]) -> Vec<u128> {
        // the decryption works exactly the same as the encryption
        self.encrypt(key, ciphertext)
    }
}

#[cfg(test)]
mod tests {
    use super::*;
    use crate::cryptography::aes::{AESKey128, AESKey192, AESKey256};
    use crate::cryptography::mode_of_operation::tests::{test_decrypt, test_encrypt};

    #[test]
    fn ctr_encrypt_128() {
        test_encrypt::<AESKey128, CTR>(
            "68858ab3dc1d2d61394a07391d910219",
            "28c683b0fd4db1a2609767c4b0ab535b1256d7489e281c8211961845f5501bf1a0d2f84a085862187a79ea30302142bf3fc60c0bacf5d1ae6fb509bdb6b1bcd8a7cf545ed478a17497cd8a263b7b74fecbbcaffe589dd1f9d6bc0b47280239e20394c09aa58e8b48fef15b9032671c5c571cd6399bb70fff6ec20cad9f791f24",
            "c60f833484802455dabb1ee1171d3f1cb3d3a76a6198c66561c393f5054963e4689e999952dd935a85a4bc3be93db4da8cb2e9347adf93d6955e31d1c474cdf21895463d38a8639d5be50fdcf7805bd1e0466d900847dba67a17bb2af46dd467901ee0d2d3882b80bbe2e076c23c632b1df719a606a28ad7a58d3eb971d375c0",
            CTR { nonce: vec![0xee, 0xa4] }
        );
        test_encrypt::<AESKey128, CTR>(
            "bcd5019ea64beba5104513016f462db0",
            "86a0ad31dbd7fad40f477bf5fa43f910ff83c0ddc999548bcc7c10487d4c66674d8ce1f17312514021f121a82113ec7165a658e9711546e693c52247be8880d35c3e08b33b8f7c128145dd69b123fdf17340213bec985d871c51f753e97f25e80114eae967f0a2aeb0cd676193f6a1bef3af8172383828b125bcff01554f0389",
            "22e14a05e8c5eec0cc5bed9682b84d6b33769234db88424d71148c7065aba111d456d7970c7473039fdfaf74a9bd15b7eb9d701461f146ea2af393d5749b9b1e12b6ab8b04a436b33f84e21328c023d96b21cd2fc9816d173a79eb994c36115961bf066fd2ea0a67754588b0b042e499c16bbd3856e4fbff64431d2323c294d0",
            CTR { nonce: vec![0x36, 0x9b, 0x21, 0x2a, 0x30, 0x8b, 0x04, 0x13, 0x1e, 0x18, 0x64] }
        );
        test_encrypt::<AESKey128, CTR>(
            "88800da3e14e672047ebd0a129ad9eb0",
            "11528a97ef51faa79fd1490408cb341d31042a132c8f1ddbe2ecc928e56db2f145e360d35f3f9546f6264c43c567c4cc29a8f22c7a2d4873e9e37c7848c94cb093e0717ffe607b751ccdb047953140d6397ae4a4c62c580a5d396c6d4e08ff4589f1b36f18013acd894d042cc6a335aaad53a8b5a2e0ec56717ff20192970c4a",
            "0dad985109c90542959e12b5785a333aa19aa7626d91d272e6d546243ad7fb2a61df39a085f490b14aa067829d27313a1fb2a7da727016437fb78d8fa6d21ca07f8c5e4215f8bacbb7430c32dea2426adbbc9aaf0bc1cb2b3bd4cb157ac8830d3b04c5cebea2014cb7c37b0bc393c55c5ef7e8556c3f9c6cf0c2252a77ce488d",
            CTR { nonce: vec![0xa7, 0x38] }
        );
    }

    #[test]
    fn ctr_decrypt_128() {
        test_decrypt::<AESKey128, CTR>(
            "c29057d5aa02f1592b0fccab7a0cf1b1",
            "124f621e2970420fe33b87065b13f6cc0d0d048dc4b68e56d5a77f1cf18a54723adde2b4887c070b026404d4ba8ea3171ce3cb9ac638a19b938d6f8eb10d637bedd39785acfdec36fb1388611ca586c6eb22351841e246473bcecfed8957159e8261b28c0655326b03b3b272662303653f3231c291516d556bd954e00a645377",
            "27d00c0a2fe48a048b9cc51acb17488eb559744bdc5e84f10800b3ab7be43923dea50db3890cab6082faf933cffcfdfd54791463f348a9e1c95bd67957ea90a12aa7766cad0600478e564ea7aa6e658cadc1a41268bfa3be455087655bc0df593ecb41a43abe0740cabfc01c57cc409019b184e26eccc202f0c4cd704726db47",
            CTR { nonce: vec![0x8d, 0x89, 0x42, 0x96, 0x5d, 0x28, 0xd7, 0x0a, 0x7b, 0xc3] }
        );
        test_decrypt::<AESKey128, CTR>(
            "7db699a81bf6474e3dbbc449919987e8",
            "3674039d15fc307d4f3d87f4e0ac3a532846010589166afa788fedc79c3d9bd73bb488df337cfbea4d915324fde8654da2ecdf8c9d665e850a5f4513fb0bc715fce78c598505c0668ca2fda2e5e97f59adf42802e528427dbaa5ec6a08c8438b11005063f0a4b342022f1aa4b875a0fc41f3304e0708d02d596edb6c486e8615",
            "0870e43b995837b33ab6d97869a3579e2ff6abc51188e8b7feb304e484d8cc65f72f84cbd47b790effdb80db7856e0e0a7d6da6d047c3403f31fbea025a79eb0128addad8bcaa366cddeebd55f616684f633d36f7b3f70d78e5c8dac3417d46c45d71834d68e83c416a7bc69786eb776e5097b1537194812a833e78aa44e040f",
            CTR { nonce: vec![0x4c, 0x03, 0x69, 0xee, 0xc1, 0x32, 0x1d, 0xf6, 0xa2, 0x77, 0x61, 0x72, 0xc6] }
        );
        test_decrypt::<AESKey128, CTR>(
            "82ae3e3151b4cb5e63d5c6052750ba84",
            "7b4b85630c93cb3d98db6c4804b083f56e1957e0d42c9e74aa1eacedee4f1e83ebf80d259c140cb1170b2e202141a1026057ea0eb6ee32829f07febf8d3c6ee104092b1f745f77d289eebbf7bc345c5f21dab4cfe6f0a5147e090c663dd745b05d6a5aaec771bcd58c4906c077265d962b502456e744ba0835188eabb5aa06a8",
            "fc578ca43d9183c9fb04155e837a70e7ef810df413e5f03378afdfe9a41a3497277d5502057565e2f8d3a4e4243b476d52087d51e9f95021f5c3d5ac869f3ab93966fb037caddb7347fbcb770b9d2c84d7190174b9931f93d41c7429175409a863ca3c9dd8d1ff42709d36f2899dbb3c300359322b482e76f79bac501501bd1d",
            CTR { nonce: vec![0x6e, 0x4a, 0x96, 0x68, 0xcb, 0x6f, 0xfc, 0x09, 0x64, 0x20, 0xbf, 0x17, 0xcf] }
        );
    }

    #[test]
    fn ctr_encrypt_192() {
        test_encrypt::<AESKey192, CTR>(
            "71d8eeaba63ae9cf0b8ff7bd16be28355f129bc7caaae204",
            "430ba66cf7a7dd1f9ab1a558d3a5e645fc3b242549af6a9ff111281dbad6a0424fedbbfa15cf3a23f21a86d4f26adc08641ab848da3f9e09a2b73e0ef14965b294bf5bca303cc72b509ec5ce0fbd41bd2f6a38b778e80d9d532515d33e098102e84c955f00f86bbcf96f6d926e6a8be69d9e635ca2ef92d0846808f66d0ed6e0",
            "b59ee28bade1dcc3be3a9a96171e3f0efa753aec15c68bb171060e11132bd1d765b30f8b12c1fe38e33f90ac067969b593662b44733bc3281ccd9990d4a2ade3ebad5d9bed2129c5349441023c4cfa5b746e4e400f1e0748c6f387a79ab9934b77fc3b46791f45cfbb81b54b8825d81ccc913d0849570d28eaa2f65c84942e62",
            CTR { nonce: vec![0x73, 0xa2, 0x7c, 0xbf, 0xe1, 0xca] }
        );
        test_encrypt::<AESKey192, CTR>(
            "6c696f683cb9ae6ab7dcace228cedfce7de81dd335cb202c",
            "24868373c0a3b212f87efc0a9f83dbdfe9f682fdd741907ac163ce00e85c823714a20fb5b52f9b5ed8642cd6d157fd2e7b591705b0f2142bcbb3cf48619ee78c60e7d2ac4b31b83a1c5c56c3656be35cd3c91adc7579d899fa22758129bac8ac318d988550a2117905396a4d0b72a397bed8bac080e9a0a4dd3350779a502af0",
            "fba5fd1f9b31fd4ccd317baca9e758383db608d48f4783e61ba17e9df98f72d17c93eeb210bd7d76133c71f634f3fd45aaadb9b6295b61d158c7084f30a63d095d1939bc5e71933dff79c3b62aa270e32ec1610c1a5588c804b4c77a819367248f45a82c58c61c2f56f9f3e40017cfc56eb270b176aa87e6110f3c79d2c5aa0a",
            CTR { nonce: vec![0x36, 0xff, 0x68, 0x54, 0x36, 0xaf, 0xc2, 0x27, 0x73, 0xff] }
        );
        test_encrypt::<AESKey192, CTR>(
            "610f4a402869e3c36f8a051577a4c512b75557f5a2848901",
            "2c3de1453c2c13c19f44fcab3b8d6cdf2e56fa00b0a4a9900a08337a8f269bfe798f5dce20a15d9b95da3106a75803a8ec5422e7bf4c11b8c888f98542dc03f51dfb6b5506894323cac76d9d047c7b84225d5233c97493b1d214883f984aefc44d7d2de16565472c3947c807fa7e01759166dfa61597e65352b094289ba98066",
            "062bb19287091916d6332920529b9c4c3a3887b6edae10529b3dfca3ae89e77f77ff1c4632cd0121a9c8d4b6c5274bbd2bf48e68cdc4c926d62fe48f2c61ca3a37bc35bf06b2f4f2ef5d9f46c5498d42f759665d025923f15c25e3370e466985a9fe96d7a29868616d72bc627767455b80d1b6efbbc2e41b2da2bc424ab4c6b9",
            CTR { nonce: vec![0xc5, 0x2c, 0xd7, 0x4b] }
        );
    }

    #[test]
    fn ctr_decrypt_192() {
        test_decrypt::<AESKey192, CTR>(
            "7cbe1957a6a601a311ca34b1cb2f5f02b593806898240234",
            "efc6701b14fa8fdddf93784da51017c82b985295098d9dc7013e7615ad20263dff2d9742c079b822905a62d89bb0b4d65dfd021bef9c4675ed52ff8b0cb2e8c55884dd2fc682451bcba21937e694977ffa8476e3b46a4a1a45110965b9edf7376aed0fae145a3453bd0b4cb876a4dc86adce0a07ee40b0ff299c0b51e30d450e",
            "2fe292efec1cac25a285f05036cb5f905220e94ed0b78d21f2b73aa3f49251f26347f29c593d335bedaf2b07b380f1d1bde0fa25e583a7bc0d26c17f76bc825ac7c24e6e5c07611d88a16ed2717bacad40fd16f1b3f757362649ecc60e7d4f5ef9e75bc550900da182e4ba30bad0e39d0c1ddf9f09a3595b1e590f830d98dceb",
            CTR { nonce: vec![0x40, 0x49, 0x56, 0xbd, 0x2c, 0x6e, 0x36, 0xac] }
        );
        test_decrypt::<AESKey192, CTR>(
            "18e8fc1c065f7fba15d547dc936402acb29272da682ae213",
            "4a2c0751c9bbd39d7548770b8d66d8f81e151ce869658d9c335b36f21fcdd3ab8081ae95db3b59a081e73d12de77dd7e3087a6fd3294af75cc16df4b89e1529f0ec000eb45e5bce353fae3eb92b0df84350a05f0a179784eba5c6fc13bc5e24ae7289e679b1f1c9b14da3567e92587f1b72d092f7e859badf55a531e4e4da4e0",
            "53bd2ba365879a13e395a9a1631d06a00acbc5e1e30ad7a478289a2711c47ef52553a32d26bd7d1b0db14d934cc7a43c5a4f9d81343b4ffcbf39fa81c43d271cd94ebf45c5fdcc9206607779831b85bd7d11e4d8bda08fa84645349985e634c4e53130cc82822c73ff7315d3c99cf56682a7acaeaa1d0eae5f7b9d96ef23ec18",
            CTR { nonce: vec![0xf9, 0x54, 0x3e, 0x0e, 0xb2, 0x95, 0xc9, 0x4f, 0xd3, 0x1f] }
        );
        test_decrypt::<AESKey192, CTR>(
            "03e707ca151090303325eaf13f2a739822e6e65039d445a0",
            "4d18339415bfcdd016754dd906558ca981e6ea54078ef37b204e5b4aeb44dd89e8df2da926655aab557098520bbd947a007b52c98c344353b786c0949f90724269f083f7d699ff5a3730db18c09989b27299c47cfaa384e7063399e432cd1c7694b74587c6a767bfdc4b0fcbf586afe60a8b4611ee2dcfba0f43cb4a6d786fdc",
            "ae2cce0412422274ce8e17159f06b2cf68d5a35462634c60ce44ac11b0dd27b97d527df3ad8eb5eb5b6637d623899f4ab76013523cf3e9d8a6107de8c548722019e93e8e9a92a9d8fb72d84fadb52f9dd07ab0fda64a39129419ea7a4b45973c7ccbb8dbeafe77caa40fd928536dab0161d08cd716ad6f56f5dc32a6ff5d1287",
            CTR { nonce: vec![0x1a, 0x29, 0xc9, 0xa0, 0xcf, 0x4d, 0x95, 0xdb, 0x5a, 0xed, 0x9f, 0xee] }
        );
    }

    #[test]
    fn ctr_encrypt_256() {
        test_encrypt::<AESKey256, CTR>(
            "472fa112496f7721f1393b8bfec1cf9294ff2cbf0af8599f905d27f562961aa0",
            "d325d317560108217047f65e56b68463015fd970d995cdd842fb5b3ae6650c6bd9a3ee5a1630d4eae054e2bdd6a549090043438a50bdbef98334190f7ad2d5e9c7195a65253c06498d57076c516abf3fec44e495d677b17f2d292b7ac4d5ef386e27a26f912bd03bae433ef280a97d6efd975172399daea50d4cf45390fe65c6",
            "9b00e0d6fda36613b2908f9d9f5379bedadee8ce0b8a2dbba5b9ba95f5965ff11e76f145f24429c93a7d97be762b788713082fd0504281059d7ee46b2d050b5c9cd39c6dae4ad20775b8ca521094c268675756e9f9f02bd44a9eb08b8712b7fbd55ffe581abb66ebc5d6dbfa75ff4713afc9053f0d747fddc9b17093127bedf7",
            CTR { nonce: vec![0x88, 0x53, 0xab] }
        );
        test_encrypt::<AESKey256, CTR>(
            "0050122fabcb1d523786badd5d9ef7833289794bdac3724c03bd1ec6c0a8a0a3",
            "b12311ef8673ccf2d86f5cd8f95c9866c14bc2c84c8c664cce0153ddbb00e15b1f43dbb554338fcdc9d6a683a69a158be58ae270b823511550955b1b90abcda577d50a6eef697752ae7b1faefaddb2385bd64ee3587e288740ee4d94b02ac0da0764b52d9cbf35595fed2f64884aec306dc559382c280e62e6b791ffd3fdd7c6",
            "eb548fcb79fd71e9c536437c19f1fd6e4cad6a5053c68620caafc9cd4531d4a7083718c466e0cfd3baa745fa95ee1a643ed2e75cc603fadd857bd4db9ce492ed6e02f49eba1da36f1fa557247dec4dc4a37d7693454b0cc114890c92343ac947653426bc052d770507ae5e25147fd8dcb3350b6672c5e3e244f82d40f3f92299",
            CTR { nonce: vec![0xd6, 0xcc, 0x8c, 0x70, 0x7b, 0xb2, 0x4f, 0x6c, 0xf3] }
        );
        test_encrypt::<AESKey256, CTR>(
            "a7ce0902912631ec88e6bffffb49c47bc1d0a63d0c8a371ee3271d615ebc2503",
            "7e7aad14cc42bde487ff311e053ceb301c3e804d6915d595bc668da56bda2cf9cbe4370e7bdf54181399dfba806066c9ba97e7ef334867860681623e29b5edf1c5bbef75d064894a6afaf2db3e288c04926ceae96c3840bb7adebe55cea1e4a2ae19b9b2c9456a05d640d2f59912dc36a79d532f97a364bfc781afaed2b7e4ac",
            "7207e767fa035b611c13299ca2c1bf223f1bab4bb4f614fcabde1d147d974de142f56461250b44f2c4ce78a03ea0f25e4df018bbaa17b2eaf954af03938be679def5b58d5aa5e1da3aed166d29c714d8c53dbb93f32896b329abff8e249df7767eec96c55e6591e043b88410325d00989b5b22c8d2167362036f3c72eee50791",
            CTR { nonce: vec![0xfa, 0xe7, 0x3e, 0x15, 0x0b] }
        );
    }

    #[test]
    fn ctr_decrypt_256() {
        test_decrypt::<AESKey256, CTR>(
            "6a4ab4f9ab6bc57f4898c4aad500f088f5091b7d0e03cd1fc09103760d3ca9cf",
            "a6332d238033665bb77b92dd194859c3bfb44e9a5435ba313ce8a969efc8871d90ef7915d9480b8e90d56ef4ab23330f4a524886729c58da4fdc01b2c0f188db970c8e57b00bd83f7b85eb7e0fc758de7799f1784012ee3a75ec17f291d603cdacc6eb22db76b801bdce34ca0ad3d5a2f1496c6ad201fb4238b4e570ad2dd9d9",
            "e41553e1434904c22714d2aa4ae828d0dc9b5ba27386b50eb1f5b3e3e0cce35322a6f67fd759e11e7c93c8e593e4997801f758ed0094c183a7287a5006601d1077cdf96a29fc36e72bdd1b85468e6b9491e5dd3e2404603c28b8a198c0f6fbb84ad17ca31ffb1079753ee8a981e1bef0be1178c8c600015dca67ba487de91852",
            CTR { nonce: vec![0xaa, 0x76, 0xc6, 0x2b, 0x4a, 0x6a] }
        );
        test_decrypt::<AESKey256, CTR>(
            "23fba065232aa7e5b6b7370bc1059e51c967b6cecf0c48bbcb737236121dc475",
            "b726b20c78ff14bbddb2dcc6471b41c4443ee58d5f7cae1a02e974d4e6a8647ca91dd821af0831d9dcf18dbc293e3bd6e7fdf80c2b98e12f2c78ec1c43a766b4d8abe068d188b61e04f29daec58508afa4ed34321f5a063dff4b92db1986af2f12764072cfedbcefeac1be28fddf0ee887762a30ef704aabe2c70c12e1e39f29",
            "2580d3dd7ace45817d01bf8ec855ec7096bae9c0d82281510d9f54eedb5eefc2d5314885040e08cf7d1f936f1ac7e89aabdc3468a20cfac75430750e33ab9d5ade2f5393da1889edfd55908fb47be7a3fc7346600009993247d6f8bf27a09886edd324704ba94bdadf227466f0a953c1e46f872733998fefd2d9a7a815c504f2",
            CTR { nonce: vec![0x67, 0x9f, 0x39, 0x80] }
        );
        test_decrypt::<AESKey256, CTR>(
            "fc837b3330d2241e0186205dc5091cdbcec7cd5c7fce95b630f8c457b8e084ed",
            "827c49d828475a20f5db9244ab2f1acce6ba90b46a75290405e070ad5504c551e9318f3cef1111c4e52e83e9f958df7979f6b2233a403426dab68aae6af0f796286a0936739f7342e38fa2452795bbeb7d62f70f417c25b238932c5f90b967287fad76f2c5426ef9093411342a6a5afde5ff79246c5733b30c2f0bfc3e744f82",
            "7307c013aa9975a1efcd4ed403a9423724eda2233b9ed20fb5944b21a22f26c7c78e1f700a465b1c6cd2675f011b7d0049d984e0a95e5834edb7a9785024322a99ac87ab56582b888cb5f899aba8e08c042dcbe349a7eb59d24ff0a8d7342f2d5684eb35827f6dfff548df8e6112d5797367d54709bdbfa56f219d165e4be965",
            CTR { nonce: vec![0xc0, 0xd1, 0xf2, 0x64, 0xc9, 0xd5, 0xfc, 0x46, 0xea, 0xcb, 0xd7] }
        );
    }

    #[test]
    #[should_panic(expected = "The counter overflowed")]
    fn ctr_encrypt_error() {
        // Here, plaintext has a length of 257, so 2 bytes
        // The nonce is 15 bytes long
        // The appended cipher input is therefore 17 bytes long, not 16
        // The method should hence panic
        test_encrypt::<AESKey128, CTR>(
            "456a7c41144d5605127b021d48ce1ef4",
            "",
            "",
            CTR { nonce: vec![0xfd, 0xb0, 0x10, 0x42, 0x6c, 0x93, 0xa8, 0x5f, 0xa7, 0xf6, 0x92, 0xfb, 0xb3, 0x88, 0xb8] }
        );
    }
}
